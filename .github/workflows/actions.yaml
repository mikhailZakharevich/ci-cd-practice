name: Actions Workflow

#on: [push, pull_request] # define events that should trigger the workflow
on:
  repository_dispatch:
    types: [build] # will only run the action for the specified event types
#  push:
#  schedule:
#    - cron: "* * * * *" # minutes - hours - d/month - month - d/week; check `ctontab guru`
                         # ex: "1 * * * *" - the job will be run at first minute of every hour (12.01, 13.01 etc.)
  pull_request:
    types: [closed, assigned, opened, reopened]
    branches: # run the action only for the specified branches
              # branches-ignore can be used instead
      - master
      - 'feature/*' # matches strings without '/', e.g.,
                    # will match: feature/featA, feature/featB etc., but not `feature/feat/featA`
      - 'feature/**' # matches any string, e.g., will match: feature/feat/featA
      - '!feature/featC' # will ignore this branch, should be put after other matches
    tags:
      - v1.*
    paths:
      - '**.js' # workflow will run for any .js file

# to enable additional logging for debug purposes, go to repo -> Settings -> Secrets -> new repo secret
# add ACTIONS_RUNNER_DEBUG, set it to `true` (runner level)
# add ACTIONS_STEP_DEBUG, set it to `true` (debug each step)
jobs:
  # job's name
  run-github-actions: # jobs are run in parallel unless you define dependencies on other jobs via 'jobs.<job_id>.needs'
    runs-on: ubuntu-latest
    steps:
      - name: Get Payload
        run: echo "${{ github.event.client_payload.env }}" # fetch a value from the field `env` (custom field)
                                                           # from `client_payload`
      - name: List files
        run: |
          pwd
          ls
          echo $GITHUB_SHA
          echo $GITHUB_REPOSITORY
          echo $GITHUB_WORKSPACE
          echo "${{ github.token }}"
#          alternative way to Checkout
#          git clone git@github:$GITHUB_REPOSITORY
#          git checkout $GITHUB_SHA
        # echo $GITHUB_SHA - get the commit id that triggered the workflow
        # echo "${{ github.token }}" - get token with which you cau authenticate to the GH repository
      - name: Checkout
        # `checkout` - one of the default actions
        uses: actions/checkout@v1 # will fetch the code from the commit that triggered the workflow to run
      - name: Check files after checkout
        run: |
          pwd
          ls -a
      - name: Simple js action
        id: greet
        # can reference actions defined locally via ./... or from some repository
        uses: actions/hello-world-javascript-action@v1 # @<n>: n - specify a version/branch/commit_id (version is preferable)
        with: # provide some input for the action
          who-to-greet: John
      - name: Log greeting time
        run: echo "${{ steps.greet.outputs.time }}" # call the output of the action with id `greet`
